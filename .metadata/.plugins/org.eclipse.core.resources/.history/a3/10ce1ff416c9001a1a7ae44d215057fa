package s10.Aula94_exercicio1_correcao.application;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Scanner;

import s10.Aula94_exercicio1_correcao.Entities.Employee;

/**
 * Fazer um programa para ler um número inteiro N e depois os dados (id, nome e
 * salario) de N funcionários. Não deve haver repetição de id.
 * 
 * Em seguida, efetuar o aumento de x por cento no salario de um determinado
 * funcionário. Para isso, o programa deve ler um id e o valor x. Se o id
 * informado não existir, mostrar uma mensagem e abortar a operação. Ao final,
 * mostrar a listagem atualizada dos funcionários, conforme exemplos.
 * 
 * Lembre-se de aplicar a técnica de encapsulamento para não permitir que o
 * salário possa ser mudado livremente. Um salário só pode ser aumentado com
 * base em uma operação de aumento por porcentagem dada.
 */

public class Program {

	public static void main(String[] args) {
		
		Locale.setDefault(Locale.US);
		Scanner sc = new Scanner(System.in);
		
		System.out.print("How many employees will be registered? ");
		int n = sc.nextInt();
		
		List<Employee> list = new ArrayList<>();
		
		for (int i = 0; i < n; i++) {
			
			System.out.println();
			System.out.println("Employee #" + (i + 1) + ":");
			System.out.print("Id: ");
			Integer id = sc.nextInt();
			System.out.print("Name: ");
			sc.nextLine();
			String name = sc.nextLine();
			System.out.print("Salary: ");
			Double salary = sc.nextDouble();
			
			Employee emp = new Employee(id, name, salary);
			list.add(emp);
			
		}
		
		System.out.println("Enter the employee id that will have salary increase: ");
		int idEmployee = sc.nextInt();
		
		
		
		sc.close();
		
	}
	
	public Integer hasId(List<Employee> list, Integer id) {
		
		return 0;
		
	}

}
